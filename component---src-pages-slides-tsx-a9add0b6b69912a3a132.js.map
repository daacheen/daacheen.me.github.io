{"version":3,"file":"component---src-pages-slides-tsx-a9add0b6b69912a3a132.js","mappings":"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","sources":["webpack://ddadaal.me/./src/layouts/BannerLayout.tsx","webpack://ddadaal.me/./src/layouts/LayeredLayout.tsx","webpack://ddadaal.me/./src/layouts/Page.tsx","webpack://ddadaal.me/./src/pages/slides.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  InnerContainer as BaseInnerContainer,\n  RootContainer as BaseRootContainer,\n} from \"@/layouts/LayeredLayout\";\nimport moveInAnimation from \"@/styles/moveInAnimation\";\nimport { colors,heights } from \"@/styles/variables\";\n\nimport HeaderFooterLayout from \"./HeaderFooterLayout\";\n\ninterface Props {\n  transparentHeader: boolean;\n  banner: React.ReactNode;\n}\n\nconst BannerLayout: React.FC<Props> = ({ transparentHeader, banner, children }) => {\n  return (\n    <HeaderFooterLayout transparentHeader={transparentHeader}>\n      <RootContainer>\n        <InnerContainer>\n          <BannerContainer>\n            {banner}\n          </BannerContainer>\n        </InnerContainer>\n      </RootContainer>\n      {children}\n    </HeaderFooterLayout>\n  );\n};\n\nconst RootContainer = styled(BaseRootContainer)`\n  height: ${heights.banner}px;\n  width: 100%;\n  background-color: ${colors.headerBg};\n\n`;\n\nconst InnerContainer = styled(BaseInnerContainer)`\n  height: ${heights.banner}px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  animation: ${moveInAnimation} 0.2s ease-out;\n`;\n\nconst BannerContainer = styled.div`\n  text-align: center;\n  color: white;\n  padding: 0px 8px 8px 8px;\n`;\n\nconst BannerLayoutTitle = styled.h1`\n  font-size: 2em;\n  padding: 4px 0;\n`;\n\nconst BannerLayoutDescription = styled.h2`\n  font-size: 0.9em;\n  padding: 4px 0;\n`;\n\nexport { BannerLayoutDescription,BannerLayoutTitle, BannerLayout as default };\n","import styled from \"styled-components\";\n\nexport const RootContainer = styled.div`\n  position: relative;\n`;\n\nexport const InnerContainer = styled.div`\n  position: absolute;\n  width: 100%;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport moveInAnimation from \"@/styles/moveInAnimation\";\nimport { widths } from \"@/styles/variables\";\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: 16px;\n\n  img {\n    max-width: 100%;\n  }\n\n  table {\n    display: inline-block;\n    overflow-x: auto;\n  }\n\n  blockquote p:last-child {\n    margin-bottom: 0;\n  }\n`;\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  maxWidth?: number;\n}\n\nconst StyledContainer = styled.div<{ maxWidth: number }>`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${({ maxWidth }) => maxWidth}px;\n\n  animation: ${moveInAnimation} 0.2s ease-out;\n`;\n\nconst Page: React.FC<Props> = ({\n  className, children,\n  maxWidth = widths.mainContent,\n}) => {\n  return (\n    <StyledPage>\n      <StyledContainer maxWidth={maxWidth} className={className}>\n        {children}\n      </StyledContainer>\n    </StyledPage>\n  );\n};\n\nexport default Page;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport { FaGithub } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nimport { PageMetadata } from \"@/components/PageMetadata\";\nimport { useI18n } from \"@/i18n\";\nimport BannerLayout, {\n  BannerLayoutDescription,\n  BannerLayoutTitle,\n} from \"@/layouts/BannerLayout\";\nimport Page from \"@/layouts/Page\";\nimport { Slide } from \"@/models/Slide\";\nimport { colors } from \"@/styles/variables\";\nimport { groupBy } from \"@/utils/groupBy\";\nimport useConstant from \"@/utils/useConstant\";\n\ninterface Props {\n  data: {\n    allSlide: {\n      nodes: { name: string; html_url: string }[];\n    };\n  };\n}\n\nconst Slides: React.FC<Props> = (props) => {\n  const { data: { allSlide: { nodes } } } = props;\n\n  const i18n = useI18n();\n\n  const title = i18n.translate(\"resources.slides.title\") as string;\n  const description = i18n.translate(\"resources.slides.description\") as string;\n\n  const sortedData = useConstant(() => {\n    const map = groupBy(nodes.map(({ name, html_url }) => ({\n      year: name.substr(0, 4),\n      date: `${name.substr(0, 4)}/${name.substr(4, 2)}/${name.substr(6, 2)}`,\n      name: name.substring(9),\n      githubUrl: html_url,\n    } as Slide)), (data) => data.year);\n\n    // to sorted array\n    return Array.from(map.entries()).sort((a, b) => b[0].localeCompare(a[0]));\n  });\n\n  return (\n    <BannerLayout transparentHeader={false} banner={\n      <>\n        <BannerLayoutTitle>{title}</BannerLayoutTitle>\n        <BannerLayoutDescription>{description}</BannerLayoutDescription>\n      </>\n    }\n    >\n      <PageMetadata\n        title={title}\n        description={description}\n      />\n      <Page maxWidth={700}>\n        <p>{i18n.translate(\"resources.slides.autoGenerated\", [\n          <a key={\"link\"} href={\"https://github.com/ddadaal/Slides\"}>\n            <FaGithub />ddadaal/Slides\n          </a>,\n        ])}</p>\n        {\n          sortedData.map(([year, pres]) => {\n            return (\n              <Year key={year}>\n                <YearNode>{year}</YearNode>\n                {pres.sort((a, b) => b.date.localeCompare(a.date)).map((pre) => (\n                  <PreNode key={pre.date}>\n                    <PreNodeName href={pre.githubUrl} target={\"__blank\"}>\n                      {pre.name}\n                    </PreNodeName>\n                    <PreNodeDate>{pre.date}</PreNodeDate>\n                  </PreNode>\n                ))}\n              </Year>\n            );\n          })\n        }\n      </Page>\n    </BannerLayout>\n  );\n};\n\nexport default Slides;\n\n\nconst Year = styled.div`\n  border-left: 1px lightgray solid;\n  padding: 8px 0;\n`;\n\nconst YearNode = styled.h2`\n  font-size: 28px;\n  font-weight: bold;\n  margin-left: 0px;\n\n  padding: 0 8px;\n\n  border-left: 4px ${colors.tocLinkActiveColor} solid;\n\n`;\n\nconst PreNode = styled.div`\n  margin-bottom: 8px;\n    padding: 0 8px;\n\n`;\n\nconst PreNodeDate = styled.span`\n  color: gray;\n  font-size: small;\n`;\n\nconst PreNodeName = styled.a`\n  display: block;\n`;\n\nexport const query = graphql`\n  query Slides {\n    allSlide(filter: {type: { eq: \"dir\" }}) {\n      nodes {\n        name\n        html_url\n        type\n      }\n    }\n  }\n`;\n"],"names":["BannerLayout","transparentHeader","banner","children","React","HeaderFooterLayout","RootContainer","InnerContainer","BannerContainer","styled","BaseRootContainer","withConfig","heights","colors","BaseInnerContainer","moveInAnimation","BannerLayoutTitle","BannerLayoutDescription","StyledPage","StyledContainer","maxWidth","className","widths","props","nodes","data","allSlide","i18n","useI18n","title","translate","description","sortedData","useConstant","map","groupBy","name","html_url","year","substr","date","substring","githubUrl","Array","from","entries","sort","a","b","localeCompare","PageMetadata","Page","key","href","FaGithub","pres","Year","YearNode","pre","PreNode","PreNodeName","target","PreNodeDate"],"sourceRoot":""}