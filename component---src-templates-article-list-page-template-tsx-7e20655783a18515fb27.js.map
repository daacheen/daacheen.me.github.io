{"version":3,"sources":["webpack:///./src/templates/ArticleListPageTemplate.tsx"],"names":["root","lang","pageMedatadata","toPage","pageNum","path","navigate","ArticleListPageTemplate","pageContext","pageCount","pageIndex","ids","language","useStore","I18nStore","titleId","articleList","meta","allLanguages","filter","x","map","name","content","metadata","detailedId"],"mappings":"8FAAA,gIAWMA,EAAOC,IAAKC,eAUlB,SAASC,EAAOC,GACd,IAAMC,EAAO,aAAwB,IAAZD,EAAgB,GAAhB,KAAyBA,EAAU,IAE5D,OAAO,kBAAME,mBAASD,IAuBTE,UApBkC,SAAC,GAAoB,IAAlBC,EAAkB,EAAlBA,YAC1CC,EAA8BD,EAA9BC,UAAWC,EAAmBF,EAAnBE,UAAWC,EAAQH,EAARG,IACtBC,EAAaC,YAASC,KAAtBF,SAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEG,QAASf,EAAKgB,YACdC,KAAMC,IACHC,QAAO,SAACC,GAAD,OAAOA,IAAMR,KACpBS,KAAI,SAACD,GAAD,MAAQ,CACXE,KAAM,sBACNC,QAASH,EAAEI,SAASC,iBAG1B,kBAAC,IAAD,CAAad,IAAKA,EAAKF,UAAWA,EAAWC,UAAWA,EAAWP,OAAQA","file":"component---src-templates-article-list-page-template-tsx-7e20655783a18515fb27.js","sourcesContent":["import React from \"react\";\n\nimport I18nStore from \"@/stores/I18nStore\";\nimport { navigate } from \"gatsby\";\nimport ArticleList from \"@/components/Article/ArticleItemList\";\nimport ArticleListLayout from \"@/layouts/ArticleListLayout\";\nimport { useStore } from \"simstate\";\nimport { allLanguages } from \"@/i18n/definition\";\nimport lang from \"@/i18n/lang\";\nimport { PageMetadata } from \"@/components/PageMetadata\";\n\nconst root = lang.pageMedatadata;\n\ninterface Props {\n  pageContext: {\n    pageIndex: number;\n    pageCount: number;\n    ids: string[];\n  };\n}\n\nfunction toPage(pageNum: number): () => void {\n  const path = `/articles${pageNum === 0 ? \"\" : `/${pageNum + 1}`}`;\n\n  return () => navigate(path);\n}\n\nconst ArticleListPageTemplate: React.FC<Props> = ({ pageContext }) => {\n  const { pageCount, pageIndex, ids } = pageContext;\n  const { language } = useStore(I18nStore);\n\n  return (\n    <ArticleListLayout>\n      <PageMetadata\n        titleId={root.articleList}\n        meta={allLanguages\n          .filter((x) => x !== language)\n          .map((x) => ({\n            name: \"og:locale:alternate\",\n            content: x.metadata.detailedId,\n          }))}\n      />\n      <ArticleList ids={ids} pageCount={pageCount} pageIndex={pageIndex} toPage={toPage} />\n    </ArticleListLayout>\n  );\n}\n\nexport default ArticleListPageTemplate;\n"],"sourceRoot":""}