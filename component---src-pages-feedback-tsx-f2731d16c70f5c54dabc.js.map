{"version":3,"sources":["webpack://ddadaal.me/./src/components/Article/CommentPanel.tsx","webpack://ddadaal.me/./src/layouts/BannerLayout.tsx","webpack://ddadaal.me/./src/layouts/LayeredLayout.tsx","webpack://ddadaal.me/./src/layouts/Page.tsx","webpack://ddadaal.me/./src/pages/feedback.tsx"],"names":["CommentDiv","styled","CommentPanel","props","React","isServer","mount","setMount","firstUpdate","useEffect","current","language","id","options","clientID","clientSecret","repo","owner","admin","title","articleTitle","articleId","substring","distractionFreeMode","proxy","undefined","CommentPanelWithCurrentLanguage","i18n","useI18n","languageInfo","currentLanguage","gitalkLangId","BannerLayout","transparentHeader","banner","children","RootContainer","InnerContainer","BannerContainer","BaseRootContainer","heights","colors","BaseInnerContainer","moveInAnimation","BannerLayoutTitle","BannerLayoutDescription","StyledPage","StyledContainer","maxWidth","className","widths","root","p","titleId","color","size"],"mappings":"6OAgBMA,EAAaC,oBAAH,oEAAGA,CAAH,sDAQVC,EAAgC,SAACC,GAErC,MAA0BC,aAAgBC,UAAnCC,EAAP,KAAcC,EAAd,KAEMC,EAAcJ,UAAa,GAgBjC,OAdAK,gBAAU,WACJD,EAAYE,QACdF,EAAYE,SAAU,EAGxBH,GAAS,KACR,CAACJ,EAAMQ,YAEVF,gBAAU,YACHJ,UAAeC,GAClBC,GAAS,MAKX,gBAACP,EAAD,KACE,0BACE,gBAAC,MAAD,MACA,gBAAC,KAAD,CAAWY,GAAG,oBAGdN,EAEI,gBAAC,IAAD,CAAiBO,QAAS,CACxBC,SAAU,uBACVC,aAAc,2CACdC,KAAM,uBACNC,MAAO,UACPC,MAAO,CAAC,WACRP,SAAUR,EAAMQ,SAChBQ,MAAM,aAAchB,EAAMiB,aAC1BR,GAAIT,EAAMkB,UAAUC,UAAU,EAAG,IACjCC,qBAAqB,EAErBC,MAAO,iGAITC,IAMNC,EAAqE,SAACvB,GAAW,IAAD,EAC9EwB,GAAOC,UAEb,OACE,gBAAC1B,EAAD,iBACMC,EADN,CAEEQ,SAAQ,UAAEkB,KAAaF,EAAKG,gBAAgBlB,IAAImB,oBAAxC,QACHF,0B,kLClELG,EAAgC,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,kBAAmBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAClE,OACE,gBAAC,IAAD,CAAoBF,kBAAmBA,GACrC,gBAACG,EAAD,KACE,gBAACC,EAAD,KACE,gBAACC,EAAD,KACGJ,KAINC,IAKDC,GAAgBnC,QAAOsC,KAAV,8EAAGtC,CAAH,kDACPuC,YAEUC,eAIhBJ,GAAiBpC,QAAOyC,KAAV,+EAAGzC,CAAH,gHACRuC,YAKGG,KAGTL,EAAkBrC,oBAAH,qEAAGA,CAAH,4DAMf2C,EAAoB3C,mBAAH,uEAAGA,CAAH,kCAKjB4C,EAA0B5C,mBAAH,6EAAGA,CAAH,qC,uGCvDhBmC,EAAgBnC,oBAAH,wEAAGA,CAAH,wBAIboC,EAAiBpC,oBAAH,yEAAGA,CAAH,oC,8ECDrB6C,EAAa7C,oBAAH,2DAAGA,CAAH,mKA0BV8C,EAAkB9C,oBAAH,gEAAGA,CAAH,kHAKN,qBAAG+C,WAEHL,KAgBf,IAb8B,SAAC,GAGxB,IAFLM,EAEI,EAFJA,UAAWd,EAEP,EAFOA,SAEP,IADJa,gBACI,MADOE,iBACP,EACJ,OACE,gBAACJ,EAAD,KACE,gBAACC,EAAD,CAAiBC,SAAUA,EAAUC,UAAWA,GAC7Cd,M,6HCvCHgB,GAAOC,OAAE,aAsBf,UApB+B,WAE7B,OACE,gBAAC,IAAD,CAAoBnB,mBAAmB,GACrC,gBAAC,IAAD,CACEoB,QAASF,EAAK,WAEhB,gBAAC,IAAD,KACE,gBAAC,IAAD,KAAmB,gBAAC,KAAD,CAAWvC,GAAIuC,EAAK,YACvC,yBAAG,gBAAC,KAAD,CAAWvC,GAAIuC,EAAK,iBACvB,yBAAG,gBAAC,KAAD,CAAWvC,GAAIuC,EAAK,iBACvB,yBAAG,gBAAC,KAAD,CAAWvC,GAAIuC,EAAK,iBACvB,gBAAC,IAAD,CAAUG,MAAO,QAASC,KAAM,MAChC,gBAAC,IAAD,CAAiClC,UAAU,WAAWD,aAAa","file":"component---src-pages-feedback-tsx-f2731d16c70f5c54dabc.js","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport styled from \"styled-components\";\nimport { FaComments } from \"react-icons/fa\";\n\nimport \"gitalk/dist/gitalk.css\";\nimport { useI18n, Localized, languageInfo } from \"@/i18n\";\nimport GitalkComponent from \"gitalk/dist/gitalk-component\";\nimport isServer from \"@/utils/isServer\";\n\ninterface Props {\n  articleId: string;\n  articleTitle: string;\n  language: string;\n}\n\nconst CommentDiv = styled.div`\n  margin-top: 32px;\n\n  .gt-action-text {\n    color: #6190e8;;\n  }\n`;\n\nconst CommentPanel: React.FC<Props> = (props) => {\n\n  const [mount, setMount] = React.useState(!isServer());\n\n  const firstUpdate = React.useRef(true);\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    setMount(false);\n  }, [props.language]);\n\n  useEffect(() => {\n    if (!isServer() && !mount) {\n      setMount(true);\n    }\n  });\n\n  return (\n    <CommentDiv>\n      <h3>\n        <FaComments />\n        <Localized id=\"comments.title\" />\n      </h3>\n      {\n        mount\n          ? (\n            <GitalkComponent options={{\n              clientID: \"5640259688bc3d72b807\",\n              clientSecret: \"bbe26de2fca2ea86e49a98e883caf9ff3102c4ff\",\n              repo: \"ddadaal.me.github.io\",\n              owner: \"ddadaal\",\n              admin: [\"ddadaal\"],\n              language: props.language,\n              title: `[COMMENT] ${props.articleTitle}`,\n              id: props.articleId.substring(0, 50),\n              distractionFreeMode: false,\n              // eslint-disable-next-line max-len\n              proxy: \"https://fierce-chamber-01587.herokuapp.com/https://github.com/login/oauth/access_token\",\n            }}\n            />\n          )\n          : undefined\n      }\n    </CommentDiv>\n  );\n};\n\nconst CommentPanelWithCurrentLanguage: React.FC<Omit<Props, \"language\">> = (props) => {\n  const i18n = useI18n();\n\n  return (\n    <CommentPanel\n      {...props}\n      language={languageInfo[i18n.currentLanguage.id].gitalkLangId\n        ?? languageInfo.cn.gitalkLangId}\n    />\n  );\n};\n\nexport { CommentPanel as default, CommentPanelWithCurrentLanguage };\n","import React from \"react\";\nimport HeaderFooterLayout from \"./HeaderFooterLayout\";\nimport styled from \"styled-components\";\nimport { heights, colors } from \"@/styles/variables\";\nimport {\n  RootContainer as BaseRootContainer,\n  InnerContainer as BaseInnerContainer,\n} from \"@/layouts/LayeredLayout\";\nimport moveInAnimation from \"@/styles/moveInAnimation\";\n\ninterface Props {\n  transparentHeader: boolean;\n  banner: React.ReactNode;\n}\n\nconst BannerLayout: React.FC<Props> = ({ transparentHeader, banner, children }) => {\n  return (\n    <HeaderFooterLayout transparentHeader={transparentHeader}>\n      <RootContainer>\n        <InnerContainer>\n          <BannerContainer>\n            {banner}\n          </BannerContainer>\n        </InnerContainer>\n      </RootContainer>\n      {children}\n    </HeaderFooterLayout>\n  );\n};\n\nconst RootContainer = styled(BaseRootContainer)`\n  height: ${heights.banner}px;\n  width: 100%;\n  background-color: ${colors.headerBg};\n\n`;\n\nconst InnerContainer = styled(BaseInnerContainer)`\n  height: ${heights.banner}px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  animation: ${moveInAnimation} 0.2s ease-out;\n`;\n\nconst BannerContainer = styled.div`\n  text-align: center;\n  color: white;\n  padding: 0px 8px 8px 8px;\n`;\n\nconst BannerLayoutTitle = styled.h1`\n  font-size: 2em;\n  padding: 4px 0;\n`;\n\nconst BannerLayoutDescription = styled.h2`\n  font-size: 0.9em;\n  padding: 4px 0;\n`;\n\nexport { BannerLayout as default, BannerLayoutTitle, BannerLayoutDescription };\n","import styled from \"styled-components\";\n\nexport const RootContainer = styled.div`\n  position: relative;\n`;\n\nexport const InnerContainer = styled.div`\n  position: absolute;\n  width: 100%;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { widths } from \"@/styles/variables\";\nimport moveInAnimation from \"@/styles/moveInAnimation\";\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: 16px;\n\n  img {\n    max-width: 100%;\n  }\n\n  table {\n    display: inline-block;\n    overflow-x: auto;\n  }\n\n  blockquote p:last-child {\n    margin-bottom: 0;\n  }\n`;\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  maxWidth?: number;\n}\n\nconst StyledContainer = styled.div<{ maxWidth: number }>`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${({ maxWidth }) => maxWidth}px;\n\n  animation: ${moveInAnimation} 0.2s ease-out;\n`;\n\nconst Page: React.FC<Props> = ({\n  className, children,\n  maxWidth = widths.mainContent,\n}) => {\n  return (\n    <StyledPage>\n      <StyledContainer maxWidth={maxWidth} className={className}>\n        {children}\n      </StyledContainer>\n    </StyledPage>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\r\nimport Page from \"@/layouts/Page\";\r\nimport { BannerLayoutTitle } from \"@/layouts/BannerLayout\";\r\nimport { Localized, p } from \"@/i18n\";\r\nimport Contacts from \"@/components/Contacts\";\r\nimport { CommentPanelWithCurrentLanguage } from \"@/components/Article/CommentPanel\";\r\nimport HeaderFooterLayout from \"@/layouts/HeaderFooterLayout\";\r\nimport { PageMetadata } from \"@/components/PageMetadata\";\r\n\r\nconst root = p(\"feedback.\");\r\n\r\nconst FeedbackPage: React.FC = () => {\r\n\r\n  return (\r\n    <HeaderFooterLayout transparentHeader={false}>\r\n      <PageMetadata\r\n        titleId={root(\"title\")}\r\n      />\r\n      <Page>\r\n        <BannerLayoutTitle><Localized id={root(\"title\")} /></BannerLayoutTitle>\r\n        <p><Localized id={root(\"paragraph1\")} /></p>\r\n        <p><Localized id={root(\"paragraph2\")} /></p>\r\n        <p><Localized id={root(\"paragraph3\")} /></p>\r\n        <Contacts color={\"white\"} size={1.4} />\r\n        <CommentPanelWithCurrentLanguage articleId=\"feedback\" articleTitle=\"反馈\" />\r\n      </Page>\r\n    </HeaderFooterLayout>\r\n\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;\r\n"],"sourceRoot":""}